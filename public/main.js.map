{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-user/add-user.component.css","webpack:///./src/app/add-user/add-user.component.html","webpack:///./src/app/add-user/add-user.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/edit-user/edit-user.component.css","webpack:///./src/app/edit-user/edit-user.component.html","webpack:///./src/app/edit-user/edit-user.component.ts","webpack:///./src/app/index/index.component.css","webpack:///./src/app/index/index.component.html","webpack:///./src/app/index/index.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC11c2VyL2FkZC11c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form class=\\\"container\\\" *ngIf=\\\"!error\\\" [formGroup]=\\\"addUser\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <h5>Add User</h5>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Full Name</label>\\n    <input type=\\\"text\\\" formControlName=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Enter name\\\"\\n    [ngClass]=\\\"{'is-invalid' : addUser.get('name').touched &&\\n       (addUser.get('name').errors?.minlength || addUser.get('name').errors?.required || addUser.get('name').errors?.backend)}\\\">\\n    <div *ngIf=\\\"addUser.get('name').touched\\\" class=\\\"form-text text-danger\\\">\\n      <span *ngIf=\\\"addUser.get('name').errors?.required\\\">This Field can't be empty.</span>\\n      <span *ngIf=\\\"addUser.get('name').errors?.minlength\\\">\\n        Name must {{addUser.get('name').errors?.minlength.requiredLength}} or more characters long.\\n      </span>\\n      <span *ngIf=\\\"addUser.get('name').errors?.backend\\\">{{addUser.get('name').errors?.backend.message}}.</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email address</label>\\n    <input type=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"Enter email\\\"\\n      [ngClass]=\\\"{'is-invalid' : addUser.get('email').touched &&\\n            (addUser.get('email').errors?.email || addUser.get('email').errors?.required || addUser.get('email').errors?.backend)}\\\">\\n    <div class=\\\"form-text text-danger\\\" *ngIf=\\\"addUser.get('email').touched\\\" >\\n      <span *ngIf=\\\"addUser.get('email').errors?.email\\\">Please enter a valid email address.</span>\\n      <span *ngIf=\\\"addUser.get('email').errors?.required\\\">This field is required.</span>\\n      <span *ngIf=\\\"addUser.get('email').errors?.backend\\\">{{addUser.get('email').errors?.backend.message}}.</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"about\\\">Describe your personality</label>\\n    <textarea id=\\\"about\\\" class=\\\"form-control\\\" formControlName=\\\"about\\\" rows=\\\"7\\\" placeholder=\\\"I am very good at Programming\\\"\\n    [ngClass]=\\\"{'is-invalid' : addUser.get('about').touched &&\\n      (addUser.get('about').errors?.minlength || addUser.get('about').errors?.required || addUser.get('about').errors?.backend)}\\\"></textarea>\\n    <div *ngIf=\\\"addUser.get('about').touched\\\" class=\\\"form-text text-danger\\\">\\n      <span *ngIf=\\\"addUser.get('about').errors?.required\\\">This field is required.</span>\\n      <span *ngIf=\\\"addUser.get('about').errors?.minlength\\\">\\n        Description must be  {{ addUser.get('about').errors?.minlength.requiredLength }} or more characters long.\\n      </span>\\n      <span *ngIf=\\\"addUser.get('about').errors?.backend\\\">{{addUser.get('about').errors?.backend.message}}.</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"twitterURL\\\">Twitter Profile URL</label>\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroupPrepend3\\\">https://twitter.com/</span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"twitterURL\\\" formControlName=\\\"twitterURL\\\" placeholder=\\\"Username\\\"\\n        [ngClass]=\\\"{'is-invalid': addUser.get('twitterURL').touched && addUser.get('twitterURL').errors?.backend}\\\">\\n    </div>\\n    <div class=\\\"text-danger form-text\\\" *ngIf=\\\"addUser.get('twitterURL').errors?.backend\\\">\\n      {{ addUser.get('twitterURL').errors?.backend.message }}.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"gplusURL\\\">Google Profile URL</label>\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroupPrepend3\\\">https://plus.google.com/</span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gplusURL\\\" formControlName=\\\"gplusURL\\\" placeholder=\\\"Username\\\" [ngClass]=\\\"{'is-invalid': addUser.get('gplusURL').touched && addUser.get('gplusURL').errors?.backend}\\\">\\n\\n    </div>\\n    <div class=\\\"text-danger form-text\\\" *ngIf=\\\"addUser.get('gplusURL').errors?.backend\\\">\\n      {{ addUser.get('gplusURL').errors?.backend.message }}.\\n    </div>\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!addUser.valid\\\">Submit</button>\\n</form>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"error\\\">\\n  {{error | json}}\\n</div>\\n\"","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n  error: any;\n  addUser: FormGroup = new FormGroup({\n    name: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3)\n    ]),\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    about: new FormControl('', [\n      Validators.required,\n      Validators.minLength(200)\n    ]),\n    gplusURL: new FormControl(''),\n    twitterURL: new FormControl('')\n  }); // Form Group with some formcontrol\n  constructor(private auth: AuthService, private router: Router) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.auth.register(this.addUser.value) // calls register method from auth service\n      .then(resp => {\n        this.router.navigateByUrl(''); // If user is added successfully, redirects to  homepage\n      }).catch(error => {\n        if (error.status === 422) { // Handle validation errors,\n          error.error.data.forEach(err => {\n            this.addUser.get(err.param).markAsTouched(); // Marks the field as touched\n            this.addUser.get(err.param).setErrors({\n              'backend': {\n                'message': err.msg,\n                'value': err.value\n              },\n            }); // sets errors to the field\n          });\n        } else {\n          this.error = error; // Sets the error to this.error:any\n        }\n      });\n  }\n\n}\n","import { IndexComponent } from './index/index.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\nconst routes: Routes = [\n  {path: '', component: IndexComponent},\n  {path: 'add-user', component: AddUserComponent},\n  {path: 'edit/:id', component: EditUserComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n  constructor(public router: Router) {\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { IndexComponent } from './index/index.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddUserComponent,\n    NavbarComponent,\n    IndexComponent,\n    EditUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) { }\n\n  register(user) {\n    if (user.gplusURL === '') {\n      delete user.gplusURL;\n    } else {\n      user.gplusURL = 'https://plus.google.com/' +  user.gplusURL;\n    }\n    if (user.twitterURL === '') {\n      delete user.twitterURL;\n    } else {\n      user.twitterURL = 'https://twitter.com/' + user.twitterURL;\n    }\n    return new Promise((resolve, reject) => {\n      return this.http.post('http://localhost:3000/users/add', user)\n        .toPromise()\n        .then(response => resolve(response))\n        .catch(error => reject(error));\n    });\n  } // adds a new user\n\n  getById(id) {\n    return new Promise((resolve, reject) => {\n      return this.http.get('http://localhost:3000/users/' + id)\n        .toPromise()\n        .then(resp => resolve(resp['data']))\n        .catch(error => reject(error));\n    });\n  } // gets the user by its id\n\n  getAll() {\n    return new Promise((resolve, reject) => {\n      return this.http.get('http://localhost:3000/users')\n        .toPromise()\n        .then(resp => resolve(resp))\n        .catch(error => reject(error));\n    });\n  } // returns arrayy of all the users\n\n  deleteOne(id) {\n    return new Promise((resolve, reject) => {\n      return this.http.delete('http://localhost:3000/users/' + id) // makes delete request to backend\n        .toPromise()\n        .then(resp => resolve(resp))\n        .catch(error => reject(error));\n    });\n  } // deletes a user\n\n  updateOne(user) { // Updates a user by its id\n    return new Promise((resolve, reject) => {\n      return this.http.patch('http://localhost:3000/users/' + user.id, user) // makes patch request to backend\n        .toPromise()\n        .then(resp => resolve(resp))\n        .catch(error => reject(error));\n    }); // returns a promise which can be handled in component\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtdXNlci9lZGl0LXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form class=\\\"container\\\" *ngIf=\\\"!error\\\" [formGroup]=\\\"editUser\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <h5>Edit User</h5>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Full Name</label>\\n    <input type=\\\"text\\\" formControlName=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Enter name\\\" [ngClass]=\\\"{'is-invalid' : editUser.get('name').touched &&\\n       (editUser.get('name').errors?.minlength || editUser.get('name').errors?.backend)}\\\">\\n    <div *ngIf=\\\"editUser.get('name').touched\\\" class=\\\"form-text text-danger\\\">\\n      <span *ngIf=\\\"editUser.get('name').errors?.minlength\\\">\\n        Name must {{editUser.get('name').errors?.minlength.requiredLength}} or more characters long.\\n      </span>\\n      <span *ngIf=\\\"editUser.get('name').errors?.backend\\\">{{editUser.get('name').errors?.backend.message}}.</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email address</label>\\n    <input type=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"Enter email\\\" [ngClass]=\\\"{'is-invalid' : editUser.get('email').touched &&\\n            (editUser.get('email').errors?.email || editUser.get('email').errors?.backend)}\\\">\\n    <div class=\\\"form-text text-danger\\\" *ngIf=\\\"editUser.get('email').touched\\\">\\n      <span *ngIf=\\\"editUser.get('email').errors?.email\\\">Please enter a valid email address.</span>\\n      <span *ngIf=\\\"editUser.get('email').errors?.backend\\\">{{editUser.get('email').errors?.backend.message}}.</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"about\\\">Describe your personality</label>\\n    <textarea id=\\\"about\\\" class=\\\"form-control\\\" formControlName=\\\"about\\\" rows=\\\"7\\\" placeholder=\\\"I am very good at Programming\\\"\\n      [ngClass]=\\\"{'is-invalid' : editUser.get('about').touched &&\\n      (editUser.get('about').errors?.minlength || editUser.get('about').errors?.backend)}\\\"></textarea>\\n    <div *ngIf=\\\"editUser.get('about').touched\\\" class=\\\"form-text text-danger\\\">\\n      <span *ngIf=\\\"editUser.get('about').errors?.minlength\\\">\\n        Description must be {{ editUser.get('about').errors?.minlength.requiredLength }} or more characters long.\\n      </span>\\n      <span *ngIf=\\\"editUser.get('about').errors?.backend\\\">{{editUser.get('about').errors?.backend.message}}.</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"twitterURL\\\">Twitter Profile URL</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"twitterURL\\\" formControlName=\\\"twitterURL\\\" placeholder=\\\"Username\\\"\\n        [ngClass]=\\\"{'is-invalid': editUser.get('twitterURL').touched && editUser.get('twitterURL').errors?.backend}\\\">\\n    <div class=\\\"text-danger form-text\\\" *ngIf=\\\"editUser.get('twitterURL').errors?.backend\\\">\\n      {{ editUser.get('twitterURL').errors?.backend.message }}.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"gplusURL\\\">Google Profile URL</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"gplusURL\\\" formControlName=\\\"gplusURL\\\" placeholder=\\\"Username\\\" [ngClass]=\\\"{'is-invalid': editUser.get('gplusURL').touched && editUser.get('gplusURL').errors?.backend}\\\">\\n    <div class=\\\"text-danger form-text\\\" *ngIf=\\\"editUser.get('gplusURL').errors?.backend\\\">\\n      {{ editUser.get('gplusURL').errors?.backend.message }}.\\n    </div>\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!editUser.valid\\\">Submit</button>\\n</form>\\n\\n\\n<div class=\\\"container\\\" *ngIf=\\\"error\\\">\\n  {{ error | json }}\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n  error: any;\n  editUser: FormGroup = new FormGroup({\n    id: new FormControl(''),\n    name: new FormControl('', [Validators.minLength(3)]),\n    email: new FormControl('', [Validators.email]),\n    about: new FormControl('', [Validators.minLength(200)]),\n    gplusURL: new FormControl(''),\n    twitterURL: new FormControl('')\n  });\n  constructor(private route: ActivatedRoute, private router: Router, private auth: AuthService) {}\n\n  ngOnInit() {\n    this.route.params.subscribe(params => { // Checks the params of url\n      this.auth\n        .getById(params.id) // get id from params and search for a user\n        .then(user => { // Set the editUser FORMGROUP VALUES TO USER DATA\n          this.editUser.get('id').setValue(user['_id']);\n          this.editUser.get('name').setValue(user['name']);\n          this.editUser.get('email').setValue(user['email']);\n          this.editUser.get('about').setValue(user['about']);\n          if (user['socialLinks'].gplus !== null) {\n            this.editUser.get('gplusURL').setValue(user['socialLinks'].gplus);\n          }\n          if (user['socialLinks'].twitter !== null) {\n            this.editUser.get('twitterURL').setValue(user['socialLinks'].twitter);\n          }\n        })\n        .catch(error => (this.error = error)); // If error occurs, sets the error\n    });\n  }\n\n  onSubmit() { // Handles the submission of form\n    this.auth.updateOne(this.editUser.value)\n      .then(updated => this.router.navigateByUrl(''))\n      .catch(error => {\n        console.log(error);\n        if (error.status === 422) { // 422 means validation error, validation error will be handled this way\n          error.error.data.forEach(err => { // loops through the error.data\n            this.editUser.get(err.param).markAsTouched(); // Gets the param and marks it as touched\n            this.editUser.get(err.param).setErrors({\n              'backend': {\n                'message': err.msg,\n                'value': err.value\n              },\n            }); // Sets the errors in order to display it on the html\n          });\n        } else {\n          this.error = error; // if there is no validation error , just set the error\n        }\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2luZGV4L2luZGV4LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"users && !error\\\">\\n  <div *ngFor=\\\"let user of users\\\">\\n    <div class=\\\"card mt-2\\\">\\n      <div class=\\\"card-header\\\">{{user.email}}</div>\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{user.name}}</h5>\\n        <p class=\\\"card-text\\\">{{user.about}}</p>\\n        <p *ngIf=\\\"user.socialLinks.facebook || user.socialLinks.gplus || user.socialLinks.twitter\\\">\\n          <a target=\\\"_blank\\\" href=\\\"{{user.socialLinks.facebook}}\\\" *ngIf=\\\"user.socialLinks.facebook\\\">Facebook</a>\\n          <a target=\\\"_blank\\\" href=\\\"{{user.socialLinks.gplus}}\\\" *ngIf=\\\"user.socialLinks.gplus\\\">Google Plus</a>\\n          <a target=\\\"_blank\\\" href=\\\"{{user.socialLinks.twitter}}\\\" *ngIf=\\\"user.socialLinks.twitter\\\">Twitter</a>\\n        </p>\\n        <a [routerLink]=\\\"['edit', user._id]\\\" class=\\\"btn btn-primary d-inline-block mr-2\\\">Edit</a>\\n        <a (click)=\\\"delete(user._id)\\\" class=\\\"btn btn-danger d-inline-block\\\">Delete</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"error\\\">\\n  {{error | json}}\\n</div>\\n\"","import { AuthService } from './../auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n  users: any;\n  error: any;\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() { // Sets list of users to this.users\n    this.auth.getAll()\n      .then(object => {\n        this.users = object['data'];\n      }).catch(error => {\n        this.error = error.data;\n      });\n  } // gets automatically called\n  delete(id) { // If Delete button is pressed, make a request to delete the user and reload the component\n    this.auth.deleteOne(id)\n      .then(_ => this.ngOnInit())\n      .catch(error => this.error = error.data);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\">Secure MEAN APP</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n    aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\" routerLinkActive=\\\"active current\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"add-user\\\">Add User</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}